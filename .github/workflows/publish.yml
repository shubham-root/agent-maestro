name: Publish Extension

on:
  # Trigger on manual workflow dispatch
  workflow_dispatch:
  # Trigger on new version tags
  push:
    tags:
      - "v*"

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js and pnpm
        uses: ./.github/actions/setup-node-pnpm

      - name: Build extension
        run: pnpm run build:prod

      - name: Create VSIX package
        run: pnpm run vscode:package

      - name: Get package version
        id: package-version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Publish to VS Code Marketplace
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
        run: |
          pnpm run publish:vs-marketplace

      - name: Publish to Open VSX
        env:
          OVSX_PAT: ${{ secrets.OVSX_PAT }}
        run: |
          pnpm run publish:open-vsx

      - name: Find previous tag
        if: startsWith(github.ref, 'refs/tags/')
        id: previous-tag
        run: |
          # Get all tags sorted by version, excluding the current tag
          previous_tag=$(git tag --sort=-version:refname | grep -v "^${{ github.ref_name }}" | head -1)
          if [ -n "$previous_tag" ]; then
            echo "tag=$previous_tag" >> $GITHUB_OUTPUT
            echo "found=true" >> $GITHUB_OUTPUT
          else
            echo "found=false" >> $GITHUB_OUTPUT
          fi

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Find the generated VSIX file
          vsix_file=$(find . -name "*.vsix" -type f | head -1)

          # Create release with changelog between tags
          gh release create ${{ github.ref_name }} \
            --title "Release ${{ github.ref_name }}" \
            --generate-notes \
            --notes-start-tag "${{ steps.previous-tag.outputs.tag }}" \
            "$vsix_file"
